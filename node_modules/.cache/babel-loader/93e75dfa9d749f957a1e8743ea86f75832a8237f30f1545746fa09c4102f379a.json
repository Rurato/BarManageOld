{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\GitHub\\\\BarManageOld\\\\src\\\\Pages\\\\Tables\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tables() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [stock, setStock] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [responsible, setResponsible] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedItem, setSelectedItem] = useState('');\n  const [selectedQuantity, setSelectedQuantity] = useState('');\n  useEffect(() => {\n    const storedTables = JSON.parse(localStorage.getItem('tables')) || [];\n    const storedStock = JSON.parse(localStorage.getItem('stock')) || [];\n    setTables(storedTables);\n    setStock(storedStock);\n  }, []);\n  const handleTableClick = index => {\n    var _tables$index;\n    setSelectedTable(index);\n    if ((_tables$index = tables[index]) !== null && _tables$index !== void 0 && _tables$index.responsible) {\n      setResponsible('');\n    }\n  };\n  const handleAssignTable = () => {\n    var _tables$selectedTable, _tables$selectedTable2;\n    const updatedTables = [...tables];\n    updatedTables[selectedTable] = {\n      responsible: responsible || ((_tables$selectedTable = tables[selectedTable]) === null || _tables$selectedTable === void 0 ? void 0 : _tables$selectedTable.responsible),\n      items: ((_tables$selectedTable2 = tables[selectedTable]) === null || _tables$selectedTable2 === void 0 ? void 0 : _tables$selectedTable2.items) || []\n    };\n    setTables(updatedTables);\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\n    setSelectedTable(null);\n    setResponsible('');\n  };\n  const handleAddItemToTable = () => {\n    var _updatedTables$select;\n    if (!selectedItem || !selectedQuantity) {\n      alert('Preencha os campos de item e quantidade!');\n      return;\n    }\n    const item = stock.find(i => i.name === selectedItem);\n    if (!item || item.quantity < selectedQuantity) {\n      alert('Quantidade insuficiente no estoque!');\n      return;\n    }\n    const updatedStock = stock.map(i => i.name === selectedItem ? {\n      ...i,\n      quantity: i.quantity - selectedQuantity\n    } : i);\n    const updatedTables = [...tables];\n    const currentItems = ((_updatedTables$select = updatedTables[selectedTable]) === null || _updatedTables$select === void 0 ? void 0 : _updatedTables$select.items) || [];\n    updatedTables[selectedTable] = {\n      ...updatedTables[selectedTable],\n      items: [...currentItems, {\n        name: selectedItem,\n        quantity: selectedQuantity,\n        price: item.price\n      }]\n    };\n    setStock(updatedStock);\n    setTables(updatedTables);\n    localStorage.setItem('stock', JSON.stringify(updatedStock));\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\n    setSelectedItem('');\n    setSelectedQuantity('');\n    setSelectedCategory('');\n    if (item.quantity - selectedQuantity < 10) {\n      alert(`Aviso: Estoque do item \"${item.name}\" muito baixo!`);\n    }\n  };\n  const handleCloseTable = () => {\n    const updatedTables = [...tables];\n    const table = updatedTables[selectedTable];\n    const total = table.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    const closedTableEntry = {\n      tableNumber: selectedTable + 1,\n      responsible: table.responsible,\n      items: table.items,\n      total,\n      timestamp: Date.now()\n    };\n    const storedHistory = JSON.parse(localStorage.getItem('history')) || [];\n    const updatedHistory = [...storedHistory, closedTableEntry];\n    localStorage.setItem('history', JSON.stringify(updatedHistory));\n    alert(`Mesa ${selectedTable + 1} fechada! \\nItens Consumidos:\\n` + table.items.map(item => `- ${item.name} (${item.quantity}x) - R$${(item.price * item.quantity).toFixed(2)}`).join('\\n') + `\\nTotal: R$${total.toFixed(2)}`);\n    updatedTables[selectedTable] = null;\n    setTables(updatedTables);\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\n    setSelectedTable(null);\n  };\n  const handleAddTable = () => {\n    const updatedTables = [...tables, null];\n    setTables(updatedTables);\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\n  };\n  const handleRemoveTable = index => {\n    if (tables[index]) {\n      alert('A comanda precisa estar vazia para ser removida!');\n      return;\n    }\n    const updatedTables = tables.filter((_, idx) => idx !== index);\n    setTables(updatedTables);\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\n  };\n  const categories = [...new Set(stock.map(item => item.category))];\n  const handleItemRemovalChange = (tableIdx, itemIdx, value) => {\n    const updatedTables = [...tables];\n    updatedTables[tableIdx].items[itemIdx].removalQuantity = parseInt(value, 10) || 0;\n    setTables(updatedTables);\n  };\n  const handleRemoveItemFromTable = (tableIdx, itemIdx) => {\n    const removalQty = tables[tableIdx].items[itemIdx].removalQuantity || 0;\n    const item = tables[tableIdx].items[itemIdx];\n    if (removalQty <= 0 || removalQty > item.quantity) {\n      alert('Quantidade inválida para remoção!');\n      return;\n    }\n    const updatedTables = [...tables];\n    const updatedItems = [...updatedTables[tableIdx].items];\n    if (item.quantity - removalQty <= 0) {\n      updatedItems.splice(itemIdx, 1);\n    } else {\n      updatedItems[itemIdx].quantity -= removalQty;\n    }\n    updatedTables[tableIdx].items = updatedItems;\n    const updatedStock = stock.map(s => s.name === item.name ? {\n      ...s,\n      quantity: s.quantity + removalQty\n    } : s);\n    setTables(updatedTables);\n    setStock(updatedStock);\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\n    localStorage.setItem('stock', JSON.stringify(updatedStock));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tables-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Dashboard\",\n        className: \"btn\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/History\",\n        className: \"btn\",\n        children: \"Ver Hist\\xF3rico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gerenciamento de Comandas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-grid\",\n      children: tables.map((table, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `table-icon ${table ? 'occupied' : 'available'}`,\n        onClick: () => handleTableClick(index),\n        children: [\"Comanda \", index + 1, \": \", (table === null || table === void 0 ? void 0 : table.responsible) && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: table.responsible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 57\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTable,\n      className: \"btn\",\n      children: \"Adicionar Comanda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleRemoveTable(tables.length - 1),\n      className: \"btn\",\n      children: \"Remover \\xDAltima Comanda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), selectedTable !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [tables[selectedTable] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Itens na Comanda \", selectedTable + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tables[selectedTable].items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.name, \" (\", item.quantity, \"x) - R$\", (item.price * item.quantity).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: item.quantity,\n              placeholder: \"Qtd\",\n              style: {\n                width: '70px'\n              },\n              onChange: e => handleItemRemovalChange(selectedTable, idx, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => handleRemoveItemFromTable(selectedTable, idx),\n              children: \"Remover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Adicionar Item \\xE0 Comanda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          className: \"input-field-tables\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione uma Categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), categories.map((category, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedItem,\n          onChange: e => setSelectedItem(e.target.value),\n          className: \"input-field-tables\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione um Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }, this), stock.filter(item => item.category === selectedCategory).map((item, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: [item.name, \" R$\", item.price, \" (Estoque: \", item.quantity, \")\"]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 23\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Quantidade\",\n          value: selectedQuantity,\n          onChange: e => setSelectedQuantity(Number(e.target.value)),\n          className: \"input-field-tables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddItemToTable,\n          className: \"btn\",\n          children: \"Adicionar Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseTable,\n          className: \"btn\",\n          children: \"Fechar Comanda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Atribuir Respons\\xE1vel \\xE0 Comanda \", selectedTable + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nome do Respons\\xE1vel\",\n          value: responsible,\n          onChange: e => setResponsible(e.target.value),\n          className: \"input-field-tables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAssignTable,\n          className: \"btn\",\n          children: \"Atribuir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTable(null),\n        className: \"btn\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(Tables, \"KzUevuxF6BJAmDZL+mgFx8ws8CQ=\");\n_c = Tables;\nexport default Tables;\nvar _c;\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Tables","_s","tables","setTables","stock","setStock","selectedTable","setSelectedTable","responsible","setResponsible","selectedCategory","setSelectedCategory","selectedItem","setSelectedItem","selectedQuantity","setSelectedQuantity","storedTables","JSON","parse","localStorage","getItem","storedStock","handleTableClick","index","_tables$index","handleAssignTable","_tables$selectedTable","_tables$selectedTable2","updatedTables","items","setItem","stringify","handleAddItemToTable","_updatedTables$select","alert","item","find","i","name","quantity","updatedStock","map","currentItems","price","handleCloseTable","table","total","reduce","sum","closedTableEntry","tableNumber","timestamp","Date","now","storedHistory","updatedHistory","toFixed","join","handleAddTable","handleRemoveTable","filter","_","idx","categories","Set","category","handleItemRemovalChange","tableIdx","itemIdx","value","removalQuantity","parseInt","handleRemoveItemFromTable","removalQty","updatedItems","splice","s","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","style","display","alignItems","gap","flexWrap","type","min","max","placeholder","width","onChange","e","target","Number","_c","$RefreshReg$"],"sources":["C:/Users/PC/Documents/GitHub/BarManageOld/src/Pages/Tables/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nfunction Tables() {\r\n  const [tables, setTables] = useState([]);\r\n  const [stock, setStock] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [responsible, setResponsible] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [selectedItem, setSelectedItem] = useState('');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedTables = JSON.parse(localStorage.getItem('tables')) || [];\r\n    const storedStock = JSON.parse(localStorage.getItem('stock')) || [];\r\n    setTables(storedTables);\r\n    setStock(storedStock);\r\n  }, []);\r\n\r\n  const handleTableClick = (index) => {\r\n    setSelectedTable(index);\r\n    if (tables[index]?.responsible) {\r\n      setResponsible('');\r\n    }\r\n  };\r\n\r\n  const handleAssignTable = () => {\r\n    const updatedTables = [...tables];\r\n    updatedTables[selectedTable] = {\r\n      responsible: responsible || tables[selectedTable]?.responsible,\r\n      items: tables[selectedTable]?.items || [],\r\n    };\r\n    setTables(updatedTables);\r\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\r\n    setSelectedTable(null);\r\n    setResponsible('');\r\n  };\r\n\r\n  const handleAddItemToTable = () => {\r\n    if (!selectedItem || !selectedQuantity) {\r\n      alert('Preencha os campos de item e quantidade!');\r\n      return;\r\n    }\r\n\r\n    const item = stock.find((i) => i.name === selectedItem);\r\n    if (!item || item.quantity < selectedQuantity) {\r\n      alert('Quantidade insuficiente no estoque!');\r\n      return;\r\n    }\r\n\r\n    const updatedStock = stock.map((i) =>\r\n      i.name === selectedItem ? { ...i, quantity: i.quantity - selectedQuantity } : i\r\n    );\r\n    const updatedTables = [...tables];\r\n    const currentItems = updatedTables[selectedTable]?.items || [];\r\n    updatedTables[selectedTable] = {\r\n      ...updatedTables[selectedTable],\r\n      items: [\r\n        ...currentItems,\r\n        { name: selectedItem, quantity: selectedQuantity, price: item.price },\r\n      ],\r\n    };\r\n\r\n    setStock(updatedStock);\r\n    setTables(updatedTables);\r\n    localStorage.setItem('stock', JSON.stringify(updatedStock));\r\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\r\n    setSelectedItem('');\r\n    setSelectedQuantity('');\r\n    setSelectedCategory('');\r\n\r\n    if (item.quantity - selectedQuantity < 10) {\r\n      alert(`Aviso: Estoque do item \"${item.name}\" muito baixo!`);\r\n    }\r\n  };\r\n\r\n  const handleCloseTable = () => {\r\n    const updatedTables = [...tables];\r\n    const table = updatedTables[selectedTable];\r\n    const total = table.items.reduce(\r\n      (sum, item) => sum + item.price * item.quantity,\r\n      0\r\n    );\r\n\r\n    const closedTableEntry = {\r\n      tableNumber: selectedTable + 1,\r\n      responsible: table.responsible,\r\n      items: table.items,\r\n      total,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    const storedHistory = JSON.parse(localStorage.getItem('history')) || [];\r\n    const updatedHistory = [...storedHistory, closedTableEntry];\r\n    localStorage.setItem('history', JSON.stringify(updatedHistory));\r\n\r\n    alert(\r\n      `Mesa ${selectedTable + 1} fechada! \\nItens Consumidos:\\n` +\r\n        table.items\r\n          .map(\r\n            (item) =>\r\n              `- ${item.name} (${item.quantity}x) - R$${(\r\n                item.price * item.quantity\r\n              ).toFixed(2)}`\r\n          )\r\n          .join('\\n') +\r\n        `\\nTotal: R$${total.toFixed(2)}`\r\n    );\r\n\r\n    updatedTables[selectedTable] = null;\r\n    setTables(updatedTables);\r\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\r\n    setSelectedTable(null);\r\n  };\r\n\r\n  const handleAddTable = () => {\r\n    const updatedTables = [...tables, null];\r\n    setTables(updatedTables);\r\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\r\n  };\r\n\r\n  const handleRemoveTable = (index) => {\r\n    if (tables[index]) {\r\n      alert('A comanda precisa estar vazia para ser removida!');\r\n      return;\r\n    }\r\n    const updatedTables = tables.filter((_, idx) => idx !== index);\r\n    setTables(updatedTables);\r\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\r\n  };\r\n\r\n  const categories = [...new Set(stock.map((item) => item.category))];\r\n\r\n  const handleItemRemovalChange = (tableIdx, itemIdx, value) => {\r\n    const updatedTables = [...tables];\r\n    updatedTables[tableIdx].items[itemIdx].removalQuantity = parseInt(value, 10) || 0;\r\n    setTables(updatedTables);\r\n  };\r\n\r\n  const handleRemoveItemFromTable = (tableIdx, itemIdx) => {\r\n    const removalQty = tables[tableIdx].items[itemIdx].removalQuantity || 0;\r\n    const item = tables[tableIdx].items[itemIdx];\r\n\r\n    if (removalQty <= 0 || removalQty > item.quantity) {\r\n      alert('Quantidade inválida para remoção!');\r\n      return;\r\n    }\r\n\r\n    const updatedTables = [...tables];\r\n    const updatedItems = [...updatedTables[tableIdx].items];\r\n    if (item.quantity - removalQty <= 0) {\r\n      updatedItems.splice(itemIdx, 1);\r\n    } else {\r\n      updatedItems[itemIdx].quantity -= removalQty;\r\n    }\r\n\r\n    updatedTables[tableIdx].items = updatedItems;\r\n\r\n    const updatedStock = stock.map((s) =>\r\n      s.name === item.name\r\n        ? { ...s, quantity: s.quantity + removalQty }\r\n        : s\r\n    );\r\n\r\n    setTables(updatedTables);\r\n    setStock(updatedStock);\r\n    localStorage.setItem('tables', JSON.stringify(updatedTables));\r\n    localStorage.setItem('stock', JSON.stringify(updatedStock));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tables-container\">\r\n      <div className=\"back\">\r\n        <Link to=\"/Dashboard\" className=\"btn\">Voltar</Link>\r\n        <Link to=\"/History\" className=\"btn\">Ver Histórico</Link>\r\n      </div>\r\n      <h2>Gerenciamento de Comandas</h2>\r\n      <div className=\"tables-grid\">\r\n        {tables.map((table, index) => (\r\n          <div\r\n            key={index}\r\n            className={`table-icon ${table ? 'occupied' : 'available'}`}\r\n            onClick={() => handleTableClick(index)}\r\n          >\r\n            Comanda {index + 1}: {table?.responsible && <span>{table.responsible}</span>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddTable} className=\"btn\">Adicionar Comanda</button>\r\n      {tables.length > 0 && (\r\n        <button\r\n          onClick={() => handleRemoveTable(tables.length - 1)}\r\n          className=\"btn\"\r\n        >\r\n          Remover Última Comanda\r\n        </button>\r\n      )}\r\n\r\n      {selectedTable !== null && (\r\n        <div className=\"form-container\">\r\n          {tables[selectedTable] ? (\r\n            <>\r\n              <h3>Itens na Comanda {selectedTable + 1}</h3>\r\n              <ul>\r\n                {tables[selectedTable].items.map((item, idx) => (\r\n                  <li key={idx} style={{ display: 'flex', alignItems: 'center', gap: '8px', flexWrap: 'wrap' }}>\r\n                    <span>\r\n                      {item.name} ({item.quantity}x) - R${(item.price * item.quantity).toFixed(2)}\r\n                    </span>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={item.quantity}\r\n                      placeholder=\"Qtd\"\r\n                      style={{ width: '70px' }}\r\n                      onChange={(e) => handleItemRemovalChange(selectedTable, idx, e.target.value)}\r\n                    />\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => handleRemoveItemFromTable(selectedTable, idx)}\r\n                    >\r\n                      Remover\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <h3>Adicionar Item à Comanda</h3>\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                className=\"input-field-tables\"\r\n              >\r\n                <option value=\"\">Selecione uma Categoria</option>\r\n                {categories.map((category, idx) => (\r\n                  <option key={idx} value={category}>{category}</option>\r\n                ))}\r\n              </select>\r\n              {selectedCategory && (\r\n                <select\r\n                  value={selectedItem}\r\n                  onChange={(e) => setSelectedItem(e.target.value)}\r\n                  className=\"input-field-tables\"\r\n                >\r\n                  <option value=\"\">Selecione um Item</option>\r\n                  {stock\r\n                    .filter((item) => item.category === selectedCategory)\r\n                    .map((item, idx) => (\r\n                      <option key={idx} value={item.name}>\r\n                        {item.name} R${item.price} (Estoque: {item.quantity})\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              )}\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Quantidade\"\r\n                value={selectedQuantity}\r\n                onChange={(e) => setSelectedQuantity(Number(e.target.value))}\r\n                className=\"input-field-tables\"\r\n              />\r\n              <button onClick={handleAddItemToTable} className=\"btn\">Adicionar Item</button>\r\n              <button onClick={handleCloseTable} className=\"btn\">Fechar Comanda</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3>Atribuir Responsável à Comanda {selectedTable + 1}</h3>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nome do Responsável\"\r\n                value={responsible}\r\n                onChange={(e) => setResponsible(e.target.value)}\r\n                className=\"input-field-tables\"\r\n              />\r\n              <button onClick={handleAssignTable} className=\"btn\">Atribuir</button>\r\n            </>\r\n          )}\r\n          <button onClick={() => setSelectedTable(null)} className=\"btn\">Cancelar</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}